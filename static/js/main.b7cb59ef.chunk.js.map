{"version":3,"sources":["core/enums.ts","components/PlayControl.tsx","components/NoteInfo.tsx","components/QuizInfo.tsx","components/NotationService.ts","components/Notation.tsx","components/Keyboard.tsx","core/SoundService.ts","core/PianoNote.ts","core/PianoService.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["PianoMode","QuizStatus","PlayControl","className","this","props","message","mode","Play","onClick","onModeSelected","Quiz","React","Component","NoteInfo","title","note","onNotePress","fullname","octave","alternateNote","QuizInfo","state","count","NotationService","maxNotes","vrvToolkit","spacingNotesXml","notes","verovio","toolkit","i","push","toString","length","trepleNotesXml","bassNotesXml","noteXml","name","accidental","restXml","notationXML","join","renderData","pageWidth","border","scale","adjustPageHeight","Notation","notationService","notationAsSVG","addNote","clear","svg","renderNotation","id","dangerouslySetInnerHTML","__html","Keyboard","pianoKeys","whiteKeyId","blackKeyId","keyId","highlightedKeyId","keys","map","key","onKeyPress","SoundService","context","buffers","initialize","console","log","AudioContext","window","webkitAudioContext","loadSounds","e","alert","RangeError","hasOwnProperty","source","createBufferSource","buffer","connect","destination","start","soundPath","process","loadBuffer","path","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","error","onerror","send","PianoNote","noteId","sender","toLowerCase","parseInt","accidentalSymbol","toUpperCase","PianoService","pianoKeyMap","pianoNoteMap","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Object","forEach","Error","lowerOctave","upperOctave","naturalNotes","n","App","soundService","pianoService","handleModeChange","bind","handleKeyPress","handleNotePress","setState","undefined","getNoteByKeyId","getAlternateNote","playNote","href","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7cb59ef.chunk.js","sourcesContent":["export enum PianoMode {\r\n  Play,\r\n  Quiz\r\n}\r\n\r\nexport enum QuizStatus {\r\n  Starting,\r\n  InProgress,\r\n  Finished,\r\n  None\r\n}","import React, { MouseEvent } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { PianoMode } from '../core/enums';\r\nimport './PlayControl.css';\r\n\r\ntype PlayControlProps = {\r\n  // using `interface` is also ok\r\n  message: string;\r\n  mode: PianoMode;\r\n  onModeSelected(mode: PianoMode): void;\r\n};\r\n\r\ntype PlayControlState = {\r\n};\r\n\r\nexport default class PlayControl extends React.Component<PlayControlProps, PlayControlState> {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel\">\r\n        <div className=\"header\">{this.props.message}</div>\r\n        <div className=\"content\">\r\n          <div className=\"row\">\r\n            <span>A simple and fun way for beginners to learn music notation.</span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <button className={`btn btn-primary ${this.props.mode === PianoMode.Play ? 'selected' : ''}`} onClick={() => this.props.onModeSelected(PianoMode.Play)}>Play</button>\r\n            <button className={`btn btn-primary ${this.props.mode === PianoMode.Quiz ? 'selected' : ''}`} onClick={() => this.props.onModeSelected(PianoMode.Quiz)}>Quiz</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { PianoNote } from '../core/PianoNote';\r\nimport './NoteInfo.css';\r\n\r\ntype NoteInfoProps = {\r\n  note?: PianoNote\r\n  alternateNote?: PianoNote\r\n  onNotePress(note: PianoNote): void;\r\n};\r\n\r\ntype NoteInfoState = {\r\n};\r\n\r\nexport default class NoteInfo extends React.Component<NoteInfoProps, NoteInfoState> {\r\n\r\n  render() {\r\n\r\n    const title = (this.props.note) ? \"Now playing\" : \"Play\";\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header-secondary\">{title}</div>\r\n        <div className=\"content\">\r\n          {!this.props.note &&\r\n            <div>\r\n              <div className=\"row\">\r\n                <span>Press a key on the <b>piano</b>&nbsp;<i>below</i>,</span><br />\r\n                <span>and see the note appear on the</span><br />\r\n                <span><b>piano score</b> to the <i>right.</i></span>\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.props.note &&\r\n            <div className=\"note-card\" onClick={() => this.props.onNotePress(this.props.note!)} >\r\n              <span className=\"name\">{this.props.note.fullname}</span>\r\n              <span className=\"octave\">OCTAVE {this.props.note.octave}</span>\r\n            </div>\r\n          }\r\n          {this.props.alternateNote &&\r\n            <div className=\"note-card-or\">\r\n              <span> OR </span>\r\n            </div>\r\n          }\r\n          {this.props.alternateNote &&\r\n            <div className=\"note-card\" onClick={() => this.props.onNotePress(this.props.alternateNote!)}>\r\n              <span className=\"name\">{this.props.alternateNote.fullname}</span>\r\n              <span className=\"octave\">OCTAVE {this.props.alternateNote.octave}</span>\r\n            </div>\r\n          }\r\n        </div >\r\n      </div >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\ntype QuixInfoProps = {\r\n};\r\n\r\ntype QuixInfoState = {\r\n  count: number; // like this\r\n};\r\n\r\nexport default class QuizInfo extends React.Component<QuixInfoProps, QuixInfoState> {\r\n  state: QuixInfoState = {\r\n    // optional second annotation for better type inference\r\n    count: 0\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header-secondary\">Quiz</div>\r\n        <div className=\"content\">\r\n\r\n        </div >\r\n      </div >\r\n    );\r\n  }\r\n}\r\n","import { PianoNote } from '../core/PianoNote';\r\n\r\ndeclare var verovio: any;\r\n\r\nexport class NotationService {\r\n\r\n  private maxNotes: number = 16;\r\n  private vrvToolkit: any;\r\n  private spacingNotesXml: string[] = [];\r\n\r\n  notes: PianoNote[]\r\n\r\n  constructor() {\r\n    this.notes = [];\r\n    this.vrvToolkit = new verovio.toolkit();\r\n\r\n    // create hidden notes to ensure the staff is drawn full width. Notes are hidden via css.\r\n    for (let i = 0; i < this.maxNotes; i++) {\r\n      this.spacingNotesXml.push(`<note xml:id=\"rest-hidden-${i.toString()}\" dur=\"4\" oct=\"6\" pname=\"c\" stem.dir=\"up\" />`);\r\n    }\r\n  }\r\n\r\n  clear(): void {\r\n    this.notes.length = 0;\r\n  }\r\n\r\n  addNote(note: PianoNote): void {\r\n    if (this.notes.length == this.maxNotes) {\r\n      this.notes.length = 0;\r\n    }\r\n    this.notes.push(note);\r\n  }\r\n\r\n  renderNotation(): string {\r\n\r\n    let trepleNotesXml: string[] = [];\r\n    let bassNotesXml: string[] = [];\r\n\r\n    for (let i = 0; i < this.notes.length; i++) {\r\n      let noteXml = `<note xml:id=\"${i}\" dur=\"4\" oct=\"${this.notes[i].octave}\" pname=\"${this.notes[i].name}\" ${this.notes[i].accidental ? 'accid=\"' + this.notes[i].accidental + '\"' : ''} />`;\r\n      let restXml = `<rest xml:id=\"rest-${i}\" dur=\"4\" oct=\"${this.notes[i].octave}\" pname=\"${this.notes[i].name}\" ${this.notes[i].accidental ? 'accid=\"' + this.notes[i].accidental + '\"' : ''}/>`;\r\n\r\n      if (this.notes[i].octave > 3) {\r\n        trepleNotesXml.push(noteXml);\r\n        bassNotesXml.push(restXml);\r\n      }\r\n      else {\r\n        trepleNotesXml.push(restXml);\r\n        bassNotesXml.push(noteXml);\r\n      }\r\n    }\r\n\r\n    let notationXML =\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://relaxng.org/ns/structure/1.0\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\r\n    <mei xmlns=\"http://www.music-encoding.org/ns/mei\" meiversion=\"3.0.0\">\r\n      <music>\r\n          <body>\r\n                <mdiv>\r\n                  <score>\r\n                      <scoreDef>\r\n                            <staffGrp symbol=\"brace\" label=\"\">\r\n                              <staffDef clef.shape=\"G\" clef.line=\"2\" n=\"1\" lines=\"5\" />\r\n                              <staffDef clef.shape=\"F\" clef.line=\"4\" n=\"2\" lines=\"5\" />\r\n                            </staffGrp>\r\n                      </scoreDef>\r\n                      <section>\r\n                            <measure>\r\n                              <staff n=\"1\">\r\n                                  <layer n=\"1\" xml:id=\"layer-treple\">\r\n                                        ${ trepleNotesXml.join(\"\")}\r\n                                  </layer>\r\n                                  <layer xml:id=\"layer-spacing\" n=\"2\">\r\n                                        ${ this.spacingNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                              <staff n=\"2\">\r\n                                  <layer xml:id=\"layer-bass\" n=\"1\">\r\n                                        ${ bassNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                            </measure>\r\n                      </section>\r\n                  </score>\r\n                </mdiv>\r\n          </body>\r\n      </music>\r\n    </mei>`;\r\n\r\n    let options = {\r\n      // make these options in the notationservice\r\n      pageWidth: 1000,\r\n      border: 25,\r\n      scale: 80,\r\n      adjustPageHeight: 1\r\n    };\r\n\r\n    let renderedNotation = this.vrvToolkit.renderData(notationXML, options);\r\n    return renderedNotation;\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { NotationService } from './NotationService';\r\nimport { PianoNote } from '../core/PianoNote';\r\nimport './Notation.css';\r\n\r\ntype NotationProps = {\r\n  note?: PianoNote\r\n};\r\n\r\ntype NotationState = {\r\n  notationAsSVG: any,\r\n  notes: number[]\r\n};\r\n\r\nexport default class Notation extends React.Component<NotationProps, NotationState> {\r\n\r\n  notationService: NotationService\r\n\r\n  constructor(props: NotationProps) {\r\n    super(props);\r\n    this.state = {\r\n      notationAsSVG: null,\r\n      notes: []\r\n    };\r\n\r\n    this.notationService = new NotationService();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.note) {\r\n      this.notationService.addNote(this.props.note);\r\n    }\r\n    else {\r\n      this.notationService.clear();\r\n    }\r\n    const svg = this.notationService.renderNotation()\r\n    return (\r\n      <div id=\"notation\" dangerouslySetInnerHTML={{ __html: svg }} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './Keyboard.css';\r\n\r\ntype KeyboardProps = {\r\n  highlightedKeyId: number;\r\n  onKeyPress(keyId: number): void;\r\n};\r\n\r\ntype KeyboardState = {\r\n};\r\n\r\ntype PianoKey = {\r\n  whiteKeyId: number;\r\n  blackKeyId?: number;\r\n}\r\n\r\nexport default class Keyboard extends React.Component<KeyboardProps, KeyboardState> {\r\n\r\n  state: KeyboardState = {\r\n  };\r\n\r\n  pianoKeys: PianoKey[] = [\r\n    {whiteKeyId :16} ,\r\n    {whiteKeyId :18, blackKeyId: 17},\r\n    {whiteKeyId :20, blackKeyId: 19},\r\n    {whiteKeyId :21},\r\n    {whiteKeyId :23, blackKeyId: 22},\r\n    {whiteKeyId :25, blackKeyId: 24},\r\n    {whiteKeyId :27, blackKeyId: 26},\r\n    {whiteKeyId :28} ,\r\n    {whiteKeyId :30, blackKeyId: 29},\r\n    {whiteKeyId :32, blackKeyId: 31},\r\n    {whiteKeyId :33},\r\n    {whiteKeyId :35, blackKeyId: 34},\r\n    {whiteKeyId :37, blackKeyId: 36},\r\n    {whiteKeyId :39, blackKeyId: 38},\r\n    {whiteKeyId :40} ,\r\n    {whiteKeyId :42, blackKeyId: 41},\r\n    {whiteKeyId :44, blackKeyId: 43},\r\n    {whiteKeyId :45},\r\n    {whiteKeyId :47, blackKeyId: 46},\r\n    {whiteKeyId :49, blackKeyId: 48},\r\n    {whiteKeyId :51, blackKeyId: 50},\r\n    {whiteKeyId :52} ,\r\n    {whiteKeyId :54, blackKeyId: 53},\r\n    {whiteKeyId :56, blackKeyId: 55},\r\n    {whiteKeyId :57},\r\n    {whiteKeyId :59, blackKeyId: 58},\r\n    {whiteKeyId :61, blackKeyId: 60},\r\n    {whiteKeyId :63, blackKeyId: 62},\r\n    {whiteKeyId :64}\r\n  ];\r\n\r\n  getColor(keyId: number) {\r\n    if(keyId === this.props.highlightedKeyId){\r\n      return \"#f0e68c\";\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const keys = this.pianoKeys.map((key) =>\r\n      <li>\r\n        <div className=\"anchor\" onClick={() => this.props.onKeyPress(key.whiteKeyId)}></div>\r\n        {key.blackKeyId && <span onClick={() => this.props.onKeyPress(key.blackKeyId!)}></span>}\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <div id=\"p-wrapper\">\r\n        <ul id=\"piano\">\r\n          {keys}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","export class SoundService {\r\n\r\n  private context: AudioContext | undefined;\r\n  private buffers: {} = {};\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // load wav files for each piano key.\r\n    console.log(\"initializing audio and loading sounds\");\r\n    try {\r\n      // Hack to support AudioContext on iOS\r\n      if (typeof AudioContext !== 'undefined') {\r\n        this.context = new AudioContext();\r\n      } else if (typeof (window as any).webkitAudioContext !== 'undefined') {\r\n        this.context = new (window as any).webkitAudioContext();\r\n      }\r\n      this.loadSounds();\r\n    }\r\n    catch (e) {\r\n      alert(\"Web Audio API is not supported in this browser\");\r\n    }\r\n  }\r\n\r\n  playNote(keyId: number): void {\r\n    if (keyId < 16 || keyId > 64) {\r\n      new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (this.buffers.hasOwnProperty(keyId)) {\r\n      console.log(\"SoundService: playing key=\" + keyId);\r\n      let source = this.context!.createBufferSource();\r\n      source.buffer = (this.buffers as any)[keyId];\r\n      source.connect(this.context!.destination);\r\n      source.start(0);\r\n    }\r\n    else {\r\n      console.log(\"Audio not loaded for key=\" + keyId);\r\n    }\r\n  }\r\n\r\n  private loadSounds(): void {\r\n    // load the wav files for each piano key.\r\n    for (let i = 16; i < 65; i++) {\r\n      var soundPath = process.env.PUBLIC_URL + `/sounds/${i}.wav`;\r\n      this.loadBuffer(i.toString(), soundPath);\r\n    }\r\n  }\r\n\r\n\r\n  private loadBuffer(name: string, path: string): void {\r\n\r\n    console.log(`loadBuffer: name=${name}, path=${path}`);\r\n\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", path, true);\r\n    request.responseType = \"arraybuffer\";\r\n\r\n    let context = this.context!;\r\n    let buffers = (this.buffers as any);\r\n\r\n    request.onload = function () {\r\n      context.decodeAudioData(\r\n        request.response,\r\n        function (buffer) {\r\n          if (!buffer) {\r\n            alert('error decoding file data: ' + path);\r\n            return;\r\n          }\r\n          console.log('audio loaded for: ', name);\r\n          buffers[name] = buffer;\r\n        },\r\n        function (error) {\r\n          console.error('decodeAudioData error', error);\r\n        }\r\n      );\r\n    }\r\n    request.onerror = function () {\r\n      alert('BufferLoader: XHR error');\r\n    }\r\n    request.send();\r\n  }\r\n}\r\n","export class PianoNote {\r\n  readonly octave: number;\r\n  readonly name: string;\r\n  readonly accidental?: string;  // f | s\r\n  readonly fullname: string;\r\n  sender?: string; //optional\r\n\r\n  constructor(readonly keyId: number, readonly noteId: string) {\r\n\r\n    if (keyId < 16 || keyId > 64) {\r\n      throw new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (noteId.length < 2 || noteId.length > 3) {\r\n      throw new RangeError(\"noteId is invalid\");\r\n    }\r\n\r\n    this.name = noteId[0].toLowerCase();\r\n    this.octave = parseInt(noteId[1]);\r\n\r\n    let accidentalSymbol = \"\";\r\n\r\n    if (noteId.length === 3) {\r\n      this.accidental = noteId[2];\r\n\r\n      if (this.accidental === \"s\") {\r\n        accidentalSymbol = '\\u266F';\r\n      }\r\n      else if (this.accidental === \"f\") {\r\n        accidentalSymbol = '\\u266D';\r\n      }\r\n    }\r\n\r\n    this.fullname = this.name.toUpperCase() + accidentalSymbol;\r\n  }\r\n\r\n}\r\n","import { PianoNote } from './PianoNote';\r\n\r\nexport class PianoService {\r\n\r\n  private pianoKeyMap: any = {};\r\n  private pianoNoteMap: any = {};\r\n\r\n  constructor() {\r\n\r\n    this.pianoKeyMap = {\r\n      16: [\"c2\"],\r\n      17: [\"c2s\", \"d2f\"],\r\n      18: [\"d2\"],\r\n      19: [\"d2s\", \"e2f\"],\r\n      20: [\"e2\"],\r\n      21: [\"f2\"],\r\n      22: [\"f2s\", \"g2f\"],\r\n      23: [\"g2\"],\r\n      24: [\"g2s\", \"a2f\"],\r\n      25: [\"a2\"],\r\n      26: [\"a2s\", \"b2f\"],\r\n      27: [\"b2\"],\r\n      28: [\"c3\"],\r\n      29: [\"c3s\", \"d3f\"],\r\n      30: [\"d3\"],\r\n      31: [\"d3s\", \"e3f\"],\r\n      32: [\"e3\"],\r\n      33: [\"f3\"],\r\n      34: [\"f3s\", \"g3f\"],\r\n      35: [\"g3\"],\r\n      36: [\"g3s\", \"a3f\"],\r\n      37: [\"a3\"],\r\n      38: [\"a3s\", \"b3f\"],\r\n      39: [\"b3\"],\r\n      40: [\"c4\"],\r\n      41: [\"c4s\", \"d4f\"],\r\n      42: [\"d4\"],\r\n      43: [\"d4s\", \"e4f\"],\r\n      44: [\"e4\"],\r\n      45: [\"f4\"],\r\n      46: [\"f4s\", \"g4f\"],\r\n      47: [\"g4\"],\r\n      48: [\"g4s\", \"a4f\"],\r\n      49: [\"a4\"],\r\n      50: [\"a4s\", \"b4f\"],\r\n      51: [\"b4\"],\r\n      52: [\"c5\"],\r\n      53: [\"c5s\", \"d5f\"],\r\n      54: [\"d5\"],\r\n      55: [\"d5s\", \"e5f\"],\r\n      56: [\"e5\"],\r\n      57: [\"f5\"],\r\n      58: [\"f5s\", \"g5f\"],\r\n      59: [\"g5\"],\r\n      60: [\"g5s\", \"a5f\"],\r\n      61: [\"a5\"],\r\n      62: [\"a5s\", \"b5f\"],\r\n      63: [\"b5\"],\r\n      64: [\"c6\"]\r\n    };\r\n\r\n    // create pianoNoteMap, mapping noteIds to keyIds.\r\n    Object.keys(this.pianoKeyMap).forEach(\r\n      keyId => this.pianoKeyMap[keyId].forEach(\r\n        (note: any) => this.pianoNoteMap[note] = keyId)\r\n    );\r\n  }\r\n\r\n  getNote(noteId: string): PianoNote {\r\n    if (this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid noteId.\");\r\n    }\r\n  }\r\n\r\n  getNoteByKeyId(keyId: number): PianoNote {\r\n    if (this.pianoKeyMap.hasOwnProperty(keyId)) {\r\n      let noteId = this.pianoKeyMap[keyId][0]; // default to first note for keyId\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n  }\r\n\r\n  getAlternateNote(noteId: string): PianoNote {\r\n\r\n    if (!this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      throw new Error(\"Invalid noteId\");\r\n    }\r\n\r\n    let alternateNote: PianoNote | undefined;\r\n    let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n    let notes = this.pianoKeyMap[keyId];\r\n\r\n    if (notes.length > 1) {\r\n      if (notes[0] == noteId) {\r\n        alternateNote = new PianoNote(keyId, notes[1]);\r\n      }\r\n      else {\r\n        alternateNote = new PianoNote(keyId, notes[0]);;\r\n      }\r\n    }\r\n\r\n    return alternateNote!;\r\n  }\r\n\r\n  getAllNoteIds(): string[] {\r\n    return Object.keys(this.pianoNoteMap);\r\n  }\r\n\r\n  getAllNaturalNoteIds(lowerOctave: number = 2, upperOctave = 6): string[] {\r\n    let naturalNotes: string[] = [];\r\n\r\n    Object.keys(this.pianoNoteMap).forEach(note => {\r\n      if (note.length == 2) {\r\n        let n = parseInt(note[1]);\r\n        if (n >= lowerOctave && n <= upperOctave) {\r\n          naturalNotes.push(note);\r\n        }\r\n      }\r\n    })\r\n\r\n    return naturalNotes;\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { PianoMode } from './core/enums';\nimport PlayControl from './components/PlayControl';\nimport NoteInfo from './components/NoteInfo';\nimport QuizInfo from './components/QuizInfo';\nimport Notation from './components/Notation';\nimport Keyboard from './components/Keyboard';\nimport { SoundService } from './core/SoundService'\nimport { PianoNote } from './core/PianoNote';\nimport { PianoService } from './core/PianoService'\n\ntype AppProps = {\n};\n\ntype AppState = {\n  mode: PianoMode;\n  keyId: number;\n  note?: PianoNote;\n  alternateNote?: PianoNote;\n};\n\nclass App extends React.Component<AppProps, AppState> {\n\n  soundService: SoundService\n  pianoService: PianoService\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      mode: PianoMode.Play,\n      keyId: 0\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleNotePress = this.handleNotePress.bind(this);\n\n    this.soundService = new SoundService();\n    this.pianoService = new PianoService();\n  }\n\n  handleModeChange(mode: PianoMode) {\n    this.setState({ mode, note: undefined, alternateNote: undefined });\n  }\n\n  handleKeyPress(keyId: number) {\n    const note = this.pianoService.getNoteByKeyId(keyId);\n    const alternateNote = this.pianoService.getAlternateNote(note.noteId);\n\n    this.setState({ keyId, note: note, alternateNote: alternateNote });\n\n    this.soundService.playNote(keyId);\n  }\n\n  handleNotePress(note: PianoNote) {\n    const alternateNote = this.pianoService.getAlternateNote(note.noteId);\n\n    this.setState({ keyId: note.keyId, note: note, alternateNote: alternateNote });\n\n    this.soundService.playNote(note.keyId);\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"side-content\">\n          <PlayControl\n            message=\"Piano Play\"\n            mode={this.state.mode}\n            onModeSelected={this.handleModeChange}\n          />\n          <div className=\"panel\">\n            {this.state.mode === PianoMode.Play &&\n              <NoteInfo note={this.state.note} alternateNote={this.state.alternateNote} onNotePress={this.handleNotePress} />\n            }\n            {this.state.mode === PianoMode.Quiz &&\n              <QuizInfo />\n            }\n          </div>\n        </div>\n        <div id=\"notation-component\">\n          <Notation note={this.state.note} />\n        </div>\n        <div id=\"keyboard-component\">\n          <Keyboard highlightedKeyId={0} onKeyPress={this.handleKeyPress} />\n        </div>\n        <p id=\"appDetails\">Built with <a href=\"https://reactjs.org/\" target=\"_blank\">React</a> (v16.12.0)- Source available on <a href=\"https://github.com/deanmalone/PianoPlay/\" target=\"_blank\">GitHub</a></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}