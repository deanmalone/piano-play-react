{"version":3,"sources":["core/enums.ts","components/PlayControl.tsx","components/NoteInfo.tsx","components/QuizInfo.tsx","components/NotationService.ts","components/Notation.tsx","components/Keyboard.tsx","core/SoundService.ts","core/PianoNote.ts","core/PianoService.ts","core/QuizResult.ts","core/QuizService.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["PianoMode","QuizStatus","Result","PlayControl","className","this","props","message","mode","Play","onClick","onModeSelected","Quiz","React","Component","NoteInfo","title","note","onNotePress","fullname","octave","alternateNote","QuizInfo","state","level","handleLevelChange","bind","event","setState","target","value","status","InProgress","result","Correct","Starting","onChange","id","onStartClick","correct","incorrect","Finished","total","description","onTryAgainClick","NotationService","maxNotes","vrvToolkit","spacingNotesXml","verovio","toolkit","i","push","toString","notes","trepleNotesXml","bassNotesXml","length","noteXml","name","accidental","restXml","notationXML","join","renderData","pageWidth","border","scale","adjustPageHeight","Notation","notationService","notationAsSVG","self","$","off","on","noteClicked","color","attr","console","log","svg","renderNotation","dangerouslySetInnerHTML","__html","Keyboard","pianoKeys","whiteKeyId","blackKeyId","keyId","highlightedKeyId","keys","map","key","onKeyPress","SoundService","context","buffers","initialize","AudioContext","window","webkitAudioContext","loadSounds","e","alert","RangeError","hasOwnProperty","source","createBufferSource","buffer","connect","destination","start","soundPath","process","loadBuffer","path","request","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","error","onerror","send","PianoNote","noteId","sender","toLowerCase","parseInt","accidentalSymbol","toUpperCase","PianoService","pianoKeyMap","pianoNoteMap","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Object","forEach","Error","lowerOctave","upperOctave","naturalNotes","n","QuizResult","actualNote","selectedKeyId","quizNumber","Incorrect","QuizService","quizLength","quizNotes","quizResults","quizIndex","inProgress","None","availableNotes","Math","floor","random","App","soundService","pianoService","quizService","quizCorrect","quizIncorrect","quizStatus","resultDescription","handleModeChange","handleKeyPress","handleNotePress","undefined","index","playNote","getNoteByKeyId","getAlternateNote","addNote","currentQuizNote","getNote","getCurrentNoteId","recordResult","updateNote","getCurrentIndex","quizResult","next","nextQuizNote","getAllNaturalNoteIds","getAllNoteIds","startQuiz","href","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac8a842f.chunk.js","sourcesContent":["export enum PianoMode {\r\n  Play,\r\n  Quiz\r\n}\r\n\r\nexport enum QuizStatus {\r\n  Starting,\r\n  InProgress,\r\n  Finished,\r\n  None\r\n}\r\n\r\nexport enum Result {\r\n  Correct,\r\n  Incorrect,\r\n  None\r\n}","import React from 'react';\r\nimport { PianoMode } from '../core/enums';\r\nimport './PlayControl.css';\r\n\r\ntype PlayControlProps = {\r\n  message: string;\r\n  mode: PianoMode;\r\n  onModeSelected(mode: PianoMode): void;\r\n};\r\n\r\ntype PlayControlState = {\r\n};\r\n\r\nexport default class PlayControl extends React.Component<PlayControlProps, PlayControlState> {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel\">\r\n        <div className=\"header\">{this.props.message}</div>\r\n        <div className=\"content\">\r\n          <div className=\"row\">\r\n            <span>A simple and fun way for beginners to learn music notation.</span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <button className={`btn btn-primary ${this.props.mode === PianoMode.Play ? 'selected' : ''}`} onClick={() => this.props.onModeSelected(PianoMode.Play)}>Play</button>\r\n            <button className={`btn btn-primary ${this.props.mode === PianoMode.Quiz ? 'selected' : ''}`} onClick={() => this.props.onModeSelected(PianoMode.Quiz)}>Quiz</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { PianoNote } from '../core/PianoNote';\r\nimport './NoteInfo.css';\r\n\r\ntype NoteInfoProps = {\r\n  note?: PianoNote\r\n  alternateNote?: PianoNote\r\n  onNotePress(note: PianoNote): void;\r\n};\r\n\r\ntype NoteInfoState = {\r\n};\r\n\r\nexport default class NoteInfo extends React.Component<NoteInfoProps, NoteInfoState> {\r\n\r\n  render() {\r\n\r\n    const title = (this.props.note) ? \"Now playing\" : \"Play\";\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header-secondary\">{title}</div>\r\n        <div className=\"content\">\r\n          {!this.props.note &&\r\n            <div>\r\n              <div className=\"row\">\r\n                <span>Press a key on the <b>piano</b>&nbsp;<i>below</i>,</span><br />\r\n                <span>and see the note appear on the</span><br />\r\n                <span><b>piano score</b> to the <i>right.</i></span>\r\n              </div>\r\n            </div>\r\n          }\r\n          {this.props.note &&\r\n            <div className=\"note-card\" onClick={() => this.props.onNotePress(this.props.note!)} >\r\n              <span className=\"name\">{this.props.note.fullname}</span>\r\n              <span className=\"octave\">OCTAVE {this.props.note.octave}</span>\r\n            </div>\r\n          }\r\n          {this.props.alternateNote &&\r\n            <div className=\"note-card-or\">\r\n              <span> OR </span>\r\n            </div>\r\n          }\r\n          {this.props.alternateNote &&\r\n            <div className=\"note-card\" onClick={() => this.props.onNotePress(this.props.alternateNote!)}>\r\n              <span className=\"name\">{this.props.alternateNote.fullname}</span>\r\n              <span className=\"octave\">OCTAVE {this.props.alternateNote.octave}</span>\r\n            </div>\r\n          }\r\n        </div >\r\n      </div >\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport './QuizInfo.css';\r\n\r\nimport { QuizStatus, Result } from '../core/enums';\r\nimport { QuizResult } from \"../core/QuizResult\";\r\n\r\ntype QuizInfoProps = {\r\n  correct: number;\r\n  incorrect: number;\r\n  total: number;\r\n  status: QuizStatus;\r\n  description: string;\r\n  result?: QuizResult;\r\n  onStartClick(level: string): void;\r\n  onTryAgainClick(): void;\r\n};\r\n\r\ntype QuizInfoState = {\r\n  level: string;\r\n};\r\n\r\nexport default class QuizInfo extends React.Component<QuizInfoProps, QuizInfoState> {\r\n\r\n  constructor(props: QuizInfoProps) {\r\n    super(props);\r\n    this.state = {level: 'easy'};\r\n\r\n    this.handleLevelChange = this.handleLevelChange.bind(this);\r\n  }\r\n\r\n  handleLevelChange(event: any) {\r\n    this.setState({level: event.target.value});\r\n  }\r\n\r\n  render() {\r\n\r\n    let message = \"\";\r\n    if(this.props.status === QuizStatus.InProgress && this.props.result){\r\n      message = (this.props.result.result === Result.Correct) ? \"\\u2714 Correct, well done!\" : \"\\u2718 Incorrect\"\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"header-secondary\">Quiz</div>\r\n        <div className=\"content\">\r\n          {this.props.status === QuizStatus.Starting &&\r\n          <div>\r\n            <div className=\"row\">\r\n              <span>Select level:</span>\r\n              <select className=\"dropdown\" value={this.state.level} onChange={this.handleLevelChange}>\r\n                  <option value=\"easy\">Easy</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"hard\">Hard</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"row\">\r\n              <button id=\"start-btn\" className=\"btn btn-secondary\" onClick={() =>this.props.onStartClick(this.state.level)}>Start</button>\r\n            </div>\r\n          </div>}\r\n          {this.props.status === QuizStatus.InProgress &&\r\n          <div>\r\n            <div className=\"row\">\r\n              <span>Press the correct key on the piano.</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <span className=\"score-label\">Score</span><span className=\"score correct\">{ this.props.correct }</span><span className=\"score incorrect\">{ this.props.incorrect }</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <span>{ message }</span>\r\n            </div>\r\n          </div>}\r\n          {this.props.status === QuizStatus.Finished &&\r\n          <div>\r\n            <div className=\"row\">\r\n              <span>Your score: </span><span><b>{ this.props.correct }</b> out of { this.props.total }</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <span>{ this.props.description }</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <button id=\"tryagain-btn\" className=\"btn btn-secondary\" onClick={() =>this.props.onTryAgainClick()}>Try Again?</button>\r\n            </div>\r\n          </div>}\r\n        </div >\r\n      </div >\r\n    );\r\n  }\r\n}\r\n","import { PianoNote } from '../core/PianoNote';\r\n\r\ndeclare var verovio: any;\r\n\r\nexport class NotationService {\r\n\r\n  private maxNotes: number = 16;\r\n  private vrvToolkit: any;\r\n  private spacingNotesXml: string[] = [];\r\n\r\n  constructor() {\r\n    this.vrvToolkit = new verovio.toolkit();\r\n\r\n    // create hidden notes to ensure the staff is drawn full width. Notes are hidden via css.\r\n    for (let i = 0; i < this.maxNotes; i++) {\r\n      this.spacingNotesXml.push(`<note xml:id=\"rest-hidden-${i.toString()}\" dur=\"4\" oct=\"6\" pname=\"c\" stem.dir=\"up\" />`);\r\n    }\r\n  }\r\n\r\n  renderNotation(notes: PianoNote[]): string {\r\n\r\n    let trepleNotesXml: string[] = [];\r\n    let bassNotesXml: string[] = [];\r\n\r\n    for (let i = 0; i < notes.length; i++) {\r\n      let noteXml = `<note xml:id=\"${i}\" dur=\"4\" oct=\"${notes[i].octave}\" pname=\"${notes[i].name}\" ${notes[i].accidental ? 'accid=\"' + notes[i].accidental + '\"' : ''} />`;\r\n      let restXml = `<rest xml:id=\"rest-${i}\" dur=\"4\" oct=\"${notes[i].octave}\" pname=\"${notes[i].name}\" ${notes[i].accidental ? 'accid=\"' + notes[i].accidental + '\"' : ''}/>`;\r\n\r\n      if (notes[i].octave > 3) {\r\n        trepleNotesXml.push(noteXml);\r\n        bassNotesXml.push(restXml);\r\n      }\r\n      else {\r\n        trepleNotesXml.push(restXml);\r\n        bassNotesXml.push(noteXml);\r\n      }\r\n    }\r\n\r\n    let notationXML =\r\n      `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://relaxng.org/ns/structure/1.0\"?>\r\n    <?xml-model href=\"http://music-encoding.org/schema/3.0.0/mei-all.rng\" type=\"application/xml\" schematypens=\"http://purl.oclc.org/dsdl/schematron\"?>\r\n    <mei xmlns=\"http://www.music-encoding.org/ns/mei\" meiversion=\"3.0.0\">\r\n      <music>\r\n          <body>\r\n                <mdiv>\r\n                  <score>\r\n                      <scoreDef>\r\n                            <staffGrp symbol=\"brace\" label=\"\">\r\n                              <staffDef clef.shape=\"G\" clef.line=\"2\" n=\"1\" lines=\"5\" />\r\n                              <staffDef clef.shape=\"F\" clef.line=\"4\" n=\"2\" lines=\"5\" />\r\n                            </staffGrp>\r\n                      </scoreDef>\r\n                      <section>\r\n                            <measure>\r\n                              <staff n=\"1\">\r\n                                  <layer n=\"1\" xml:id=\"layer-treple\">\r\n                                        ${ trepleNotesXml.join(\"\")}\r\n                                  </layer>\r\n                                  <layer xml:id=\"layer-spacing\" n=\"2\">\r\n                                        ${ this.spacingNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                              <staff n=\"2\">\r\n                                  <layer xml:id=\"layer-bass\" n=\"1\">\r\n                                        ${ bassNotesXml.join(\"\")}\r\n                                  </layer>\r\n                              </staff>\r\n                            </measure>\r\n                      </section>\r\n                  </score>\r\n                </mdiv>\r\n          </body>\r\n      </music>\r\n    </mei>`;\r\n\r\n    let options = {\r\n      // make these options in the notationservice\r\n      pageWidth: 1000,\r\n      border: 25,\r\n      scale: 80,\r\n      adjustPageHeight: 1\r\n    };\r\n\r\n    let renderedNotation = this.vrvToolkit.renderData(notationXML, options);\r\n    return renderedNotation;\r\n  }\r\n}","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport { NotationService } from './NotationService';\r\nimport { PianoNote } from '../core/PianoNote';\r\nimport './Notation.css';\r\n\r\ntype NotationProps = {\r\n  notes: PianoNote[]\r\n};\r\n\r\ntype NotationState = {\r\n  notationAsSVG: any,\r\n  notes: number[]\r\n};\r\n\r\nexport default class Notation extends React.Component<NotationProps, NotationState> {\r\n\r\n  notationService: NotationService\r\n\r\n  constructor(props: NotationProps) {\r\n    super(props);\r\n    this.state = {\r\n      notationAsSVG: null,\r\n      notes: []\r\n    };\r\n\r\n    this.notationService = new NotationService();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let self=this;\r\n    $(\"g.note\").off().on('click', function () { self.noteClicked((this as any).id); });\r\n\r\n    // Update color of the notes\r\n    for (let i = 0; i < this.props.notes.length; i++) {\r\n      if (this.props.notes[i].color) {\r\n        $(\"#\" + i).attr(\"fill\", this.props.notes[i].color)\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  noteClicked(id: number) {\r\n    console.log('noteClicked: ' + id);\r\n  }\r\n\r\n  render() {\r\n    const svg = this.notationService.renderNotation(this.props.notes)\r\n    return (\r\n      <div id=\"notation\" dangerouslySetInnerHTML={{ __html: svg }} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Keyboard.css';\r\n\r\ntype KeyboardProps = {\r\n  highlightedKeyId: number;\r\n  onKeyPress(keyId: number): void;\r\n};\r\n\r\ntype KeyboardState = {\r\n};\r\n\r\ntype PianoKey = {\r\n  whiteKeyId: number;\r\n  blackKeyId?: number;\r\n}\r\n\r\nexport default class Keyboard extends React.Component<KeyboardProps, KeyboardState> {\r\n\r\n  state: KeyboardState = {\r\n  };\r\n\r\n  pianoKeys: PianoKey[] = [\r\n    {whiteKeyId :16} ,\r\n    {whiteKeyId :18, blackKeyId: 17},\r\n    {whiteKeyId :20, blackKeyId: 19},\r\n    {whiteKeyId :21},\r\n    {whiteKeyId :23, blackKeyId: 22},\r\n    {whiteKeyId :25, blackKeyId: 24},\r\n    {whiteKeyId :27, blackKeyId: 26},\r\n    {whiteKeyId :28} ,\r\n    {whiteKeyId :30, blackKeyId: 29},\r\n    {whiteKeyId :32, blackKeyId: 31},\r\n    {whiteKeyId :33},\r\n    {whiteKeyId :35, blackKeyId: 34},\r\n    {whiteKeyId :37, blackKeyId: 36},\r\n    {whiteKeyId :39, blackKeyId: 38},\r\n    {whiteKeyId :40} ,\r\n    {whiteKeyId :42, blackKeyId: 41},\r\n    {whiteKeyId :44, blackKeyId: 43},\r\n    {whiteKeyId :45},\r\n    {whiteKeyId :47, blackKeyId: 46},\r\n    {whiteKeyId :49, blackKeyId: 48},\r\n    {whiteKeyId :51, blackKeyId: 50},\r\n    {whiteKeyId :52} ,\r\n    {whiteKeyId :54, blackKeyId: 53},\r\n    {whiteKeyId :56, blackKeyId: 55},\r\n    {whiteKeyId :57},\r\n    {whiteKeyId :59, blackKeyId: 58},\r\n    {whiteKeyId :61, blackKeyId: 60},\r\n    {whiteKeyId :63, blackKeyId: 62},\r\n    {whiteKeyId :64}\r\n  ];\r\n\r\n  getColor(keyId: number) {\r\n    if(keyId === this.props.highlightedKeyId){\r\n      return \"#f0e68c\";\r\n    }\r\n    else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const keys = this.pianoKeys.map((key) =>\r\n      <li>\r\n        <div className=\"anchor\" onClick={() => this.props.onKeyPress(key.whiteKeyId)}></div>\r\n        {key.blackKeyId && <span onClick={() => this.props.onKeyPress(key.blackKeyId!)}></span>}\r\n      </li>\r\n    );\r\n\r\n    return (\r\n      <div id=\"p-wrapper\">\r\n        <ul id=\"piano\">\r\n          {keys}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","export class SoundService {\r\n\r\n  private context: AudioContext | undefined;\r\n  private buffers: {} = {};\r\n\r\n  constructor() {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    // load wav files for each piano key.\r\n    console.log(\"initializing audio and loading sounds\");\r\n    try {\r\n      // Hack to support AudioContext on iOS\r\n      if (typeof AudioContext !== 'undefined') {\r\n        this.context = new AudioContext();\r\n      } else if (typeof (window as any).webkitAudioContext !== 'undefined') {\r\n        this.context = new (window as any).webkitAudioContext();\r\n      }\r\n      this.loadSounds();\r\n    }\r\n    catch (e) {\r\n      alert(\"Web Audio API is not supported in this browser\");\r\n    }\r\n  }\r\n\r\n  playNote(keyId: number): void {\r\n    if (keyId < 16 || keyId > 64) {\r\n      new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (this.buffers.hasOwnProperty(keyId)) {\r\n      console.log(\"SoundService: playing key=\" + keyId);\r\n      let source = this.context!.createBufferSource();\r\n      source.buffer = (this.buffers as any)[keyId];\r\n      source.connect(this.context!.destination);\r\n      source.start(0);\r\n    }\r\n    else {\r\n      console.log(\"Audio not loaded for key=\" + keyId);\r\n    }\r\n  }\r\n\r\n  private loadSounds(): void {\r\n    // load the wav files for each piano key.\r\n    for (let i = 16; i < 65; i++) {\r\n      var soundPath = process.env.PUBLIC_URL + `/sounds/${i}.wav`;\r\n      this.loadBuffer(i.toString(), soundPath);\r\n    }\r\n  }\r\n\r\n\r\n  private loadBuffer(name: string, path: string): void {\r\n\r\n    console.log(`loadBuffer: name=${name}, path=${path}`);\r\n\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", path, true);\r\n    request.responseType = \"arraybuffer\";\r\n\r\n    let context = this.context!;\r\n    let buffers = (this.buffers as any);\r\n\r\n    request.onload = function () {\r\n      context.decodeAudioData(\r\n        request.response,\r\n        function (buffer) {\r\n          if (!buffer) {\r\n            alert('error decoding file data: ' + path);\r\n            return;\r\n          }\r\n          console.log('audio loaded for: ', name);\r\n          buffers[name] = buffer;\r\n        },\r\n        function (error) {\r\n          console.error('decodeAudioData error', error);\r\n        }\r\n      );\r\n    }\r\n    request.onerror = function () {\r\n      alert('BufferLoader: XHR error');\r\n    }\r\n    request.send();\r\n  }\r\n}\r\n","export class PianoNote {\r\n  readonly octave: number;\r\n  readonly name: string;\r\n  readonly accidental?: string;  // f | s\r\n  readonly fullname: string;\r\n  color: string;\r\n  sender?: string; //optional\r\n\r\n  constructor(readonly keyId: number, readonly noteId: string) {\r\n\r\n    if (keyId < 16 || keyId > 64) {\r\n      throw new RangeError(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n\r\n    if (noteId.length < 2 || noteId.length > 3) {\r\n      throw new RangeError(\"noteId is invalid\");\r\n    }\r\n\r\n    this.name = noteId[0].toLowerCase();\r\n    this.octave = parseInt(noteId[1]);\r\n    this.color = \"\";\r\n\r\n    let accidentalSymbol = \"\";\r\n\r\n    if (noteId.length === 3) {\r\n      this.accidental = noteId[2];\r\n\r\n      if (this.accidental === \"s\") {\r\n        accidentalSymbol = '\\u266F';\r\n      }\r\n      else if (this.accidental === \"f\") {\r\n        accidentalSymbol = '\\u266D';\r\n      }\r\n    }\r\n\r\n    this.fullname = this.name.toUpperCase() + accidentalSymbol;\r\n  }\r\n\r\n}\r\n","import { PianoNote } from './PianoNote';\r\n\r\nexport class PianoService {\r\n\r\n  private pianoKeyMap: any = {};\r\n  private pianoNoteMap: any = {};\r\n\r\n  constructor() {\r\n\r\n    this.pianoKeyMap = {\r\n      16: [\"c2\"],\r\n      17: [\"c2s\", \"d2f\"],\r\n      18: [\"d2\"],\r\n      19: [\"d2s\", \"e2f\"],\r\n      20: [\"e2\"],\r\n      21: [\"f2\"],\r\n      22: [\"f2s\", \"g2f\"],\r\n      23: [\"g2\"],\r\n      24: [\"g2s\", \"a2f\"],\r\n      25: [\"a2\"],\r\n      26: [\"a2s\", \"b2f\"],\r\n      27: [\"b2\"],\r\n      28: [\"c3\"],\r\n      29: [\"c3s\", \"d3f\"],\r\n      30: [\"d3\"],\r\n      31: [\"d3s\", \"e3f\"],\r\n      32: [\"e3\"],\r\n      33: [\"f3\"],\r\n      34: [\"f3s\", \"g3f\"],\r\n      35: [\"g3\"],\r\n      36: [\"g3s\", \"a3f\"],\r\n      37: [\"a3\"],\r\n      38: [\"a3s\", \"b3f\"],\r\n      39: [\"b3\"],\r\n      40: [\"c4\"],\r\n      41: [\"c4s\", \"d4f\"],\r\n      42: [\"d4\"],\r\n      43: [\"d4s\", \"e4f\"],\r\n      44: [\"e4\"],\r\n      45: [\"f4\"],\r\n      46: [\"f4s\", \"g4f\"],\r\n      47: [\"g4\"],\r\n      48: [\"g4s\", \"a4f\"],\r\n      49: [\"a4\"],\r\n      50: [\"a4s\", \"b4f\"],\r\n      51: [\"b4\"],\r\n      52: [\"c5\"],\r\n      53: [\"c5s\", \"d5f\"],\r\n      54: [\"d5\"],\r\n      55: [\"d5s\", \"e5f\"],\r\n      56: [\"e5\"],\r\n      57: [\"f5\"],\r\n      58: [\"f5s\", \"g5f\"],\r\n      59: [\"g5\"],\r\n      60: [\"g5s\", \"a5f\"],\r\n      61: [\"a5\"],\r\n      62: [\"a5s\", \"b5f\"],\r\n      63: [\"b5\"],\r\n      64: [\"c6\"]\r\n    };\r\n\r\n    // create pianoNoteMap, mapping noteIds to keyIds.\r\n    Object.keys(this.pianoKeyMap).forEach(\r\n      keyId => this.pianoKeyMap[keyId].forEach(\r\n        (note: any) => this.pianoNoteMap[note] = keyId)\r\n    );\r\n  }\r\n\r\n  getNote(noteId: string): PianoNote {\r\n    if (this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid noteId.\");\r\n    }\r\n  }\r\n\r\n  getNoteByKeyId(keyId: number): PianoNote {\r\n    if (this.pianoKeyMap.hasOwnProperty(keyId)) {\r\n      let noteId = this.pianoKeyMap[keyId][0]; // default to first note for keyId\r\n      return new PianoNote(keyId, noteId);\r\n    }\r\n    else {\r\n      throw new Error(\"Invalid keyId. The valid range of keyId is 16 to 64.\");\r\n    }\r\n  }\r\n\r\n  getAlternateNote(noteId: string): PianoNote {\r\n\r\n    if (!this.pianoNoteMap.hasOwnProperty(noteId)) {\r\n      throw new Error(\"Invalid noteId\");\r\n    }\r\n\r\n    let alternateNote: PianoNote | undefined;\r\n    let keyId = parseInt(this.pianoNoteMap[noteId]);\r\n    let notes = this.pianoKeyMap[keyId];\r\n\r\n    if (notes.length > 1) {\r\n      if (notes[0] === noteId) {\r\n        alternateNote = new PianoNote(keyId, notes[1]);\r\n      }\r\n      else {\r\n        alternateNote = new PianoNote(keyId, notes[0]);;\r\n      }\r\n    }\r\n\r\n    return alternateNote!;\r\n  }\r\n\r\n  getAllNoteIds(): string[] {\r\n    return Object.keys(this.pianoNoteMap);\r\n  }\r\n\r\n  getAllNaturalNoteIds(lowerOctave: number = 2, upperOctave = 6): string[] {\r\n    let naturalNotes: string[] = [];\r\n\r\n    Object.keys(this.pianoNoteMap).forEach(note => {\r\n      if (note.length === 2) {\r\n        let n = parseInt(note[1]);\r\n        if (n >= lowerOctave && n <= upperOctave) {\r\n          naturalNotes.push(note);\r\n        }\r\n      }\r\n    })\r\n\r\n    return naturalNotes;\r\n  }\r\n\r\n}\r\n","import { PianoNote }  from './PianoNote';\r\nimport { Result }  from '././enums';\r\n\r\nexport class QuizResult {\r\n\r\n  result: Result\r\n\r\n  constructor(readonly actualNote: PianoNote, readonly selectedKeyId: number, readonly quizNumber: number) {\r\n    this.result = (this.selectedKeyId === this.actualNote.keyId) ? Result.Correct : Result.Incorrect;\r\n  }\r\n\r\n}\r\n","import { PianoNote } from './PianoNote';\r\nimport { QuizResult } from './QuizResult';\r\nimport { QuizStatus, Result } from './enums';\r\n\r\nexport class QuizService {\r\n\r\n  private quizLength = 16;\r\n  private quizNotes: string[] = [];\r\n  private quizResults: QuizResult[] = [];\r\n  private quizIndex = 0;\r\n\r\n  inProgress: boolean = false;\r\n  correct: number = 0;\r\n  incorrect: number = 0;\r\n  status: QuizStatus = QuizStatus.None;\r\n\r\n  startQuiz(quizLength: number, availableNotes: string[]) {\r\n\r\n    this.quizLength = quizLength;\r\n\r\n    // clear quiz data\r\n    this.quizNotes.length = 0;\r\n    this.quizResults.length = 0;\r\n\r\n    this.inProgress = true;\r\n    this.quizIndex = 0;\r\n    this.correct = 0;\r\n    this.incorrect = 0;\r\n\r\n    // generate random notes from the availableNotes array\r\n    for(let i=0;i<this.quizLength;i++) {\r\n      this.quizNotes.push( availableNotes[Math.floor(Math.random() * availableNotes.length)] );\r\n    }\r\n  }\r\n\r\n  getCurrentIndex() {\r\n    return this.quizIndex;\r\n  }\r\n\r\n  getCurrentNoteId() {\r\n    return this.quizNotes[this.quizIndex];\r\n  }\r\n\r\n  next() : boolean {\r\n\r\n    // check if quiz has finished\r\n    if(this.quizIndex === (this.quizLength - 1)) {\r\n      this.inProgress = false;\r\n      return false;\r\n    }\r\n\r\n    // otherwise move on to next quiz note.\r\n    this.quizIndex++;\r\n    return true;\r\n  }\r\n\r\n  recordResult(selectedKeyId:number, actualNote: PianoNote) : QuizResult {\r\n\r\n    const result = new QuizResult(actualNote, selectedKeyId, this.quizIndex + 1);\r\n\r\n    (result.result === Result.Correct) ? this.correct++ : this.incorrect++;\r\n\r\n    this.quizResults.push(result);\r\n\r\n    return result;\r\n\r\n  }\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { PianoMode, QuizStatus, Result } from './core/enums';\nimport PlayControl from './components/PlayControl';\nimport NoteInfo from './components/NoteInfo';\nimport QuizInfo from './components/QuizInfo';\nimport Notation from './components/Notation';\nimport Keyboard from './components/Keyboard';\nimport { SoundService } from './core/SoundService'\nimport { PianoNote } from './core/PianoNote';\nimport { PianoService } from './core/PianoService'\nimport { QuizService } from './core/QuizService'\nimport { QuizResult } from './core/QuizResult';\n\ntype AppProps = {\n};\n\ntype AppState = {\n  mode: PianoMode;\n  notes: PianoNote[];\n  alternateNote?: PianoNote;\n  quizCorrect: number;\n  quizIncorrect: number;\n  quizLength: number;\n  quizStatus: QuizStatus;\n  quizResult?: QuizResult\n  resultDescription: string;\n};\n\nclass App extends React.Component<AppProps, AppState> {\n\n  soundService: SoundService;\n  pianoService: PianoService;\n  quizService: QuizService;\n\n  readonly maxNotes: number = 16;\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      mode: PianoMode.Play,\n      notes: [],\n      quizCorrect: 0,\n      quizIncorrect: 0,\n      quizLength: this.maxNotes,\n      quizStatus: QuizStatus.None,\n      resultDescription: \"\"\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleNotePress = this.handleNotePress.bind(this);\n    this.onStartClick = this.onStartClick.bind(this);\n    this.onTryAgainClick = this.onTryAgainClick.bind(this);\n\n    this.soundService = new SoundService();\n    this.pianoService = new PianoService();\n    this.quizService = new QuizService();\n  }\n\n  handleModeChange(mode: PianoMode) {\n    this.setState({ mode, notes: [], alternateNote: undefined });\n\n    if(mode === PianoMode.Quiz) {\n      this.setState({ quizCorrect: 0, quizIncorrect: 0, quizLength: this.maxNotes, quizStatus: QuizStatus.Starting });\n    }\n\n  }\n\n  addNote(note: PianoNote) : void {\n    let notes = [...this.state.notes];\n\n    if (notes.length === this.maxNotes) {\n      notes.length = 0;\n    }\n    notes.push(note);\n\n    this.setState({ notes });\n  }\n\n  updateNote(index: number, note: PianoNote): void {\n    let notes = [...this.state.notes];\n\n    notes[index] = note\n\n    this.setState({ notes });\n  }\n\n  handleKeyPress(keyId: number) {\n\n    // always play the sound\n    this.soundService.playNote(keyId);\n\n    if (this.state.mode === PianoMode.Play) {\n      const note = this.pianoService.getNoteByKeyId(keyId);\n      const alternateNote = this.pianoService.getAlternateNote(note.noteId);\n\n      this.addNote(note);\n      this.setState({alternateNote: alternateNote });\n    }\n    else {\n      // Update the quiz in progress\n      if(this.quizService.inProgress) {\n        const currentQuizNote = this.pianoService.getNote( this.quizService.getCurrentNoteId() );\n        const result = this.quizService.recordResult(keyId, currentQuizNote);\n        if (result.result === Result.Correct) currentQuizNote.color = \"#4CAF50\"; // Green\n        if (result.result === Result.Incorrect) currentQuizNote.color = \"#f44336\"; // Red\n\n        this.updateNote(this.quizService.getCurrentIndex(), currentQuizNote);\n\n        this.setState({ quizCorrect: this.quizService.correct, quizIncorrect: this.quizService.incorrect, quizResult: result }, () =>\n          {\n            if(this.quizService.next()) {\n              const nextQuizNote = this.pianoService.getNote( this.quizService.getCurrentNoteId() );\n              this.addNote(nextQuizNote);\n            }\n            else {\n              // Finish Quiz\n              let resultDescription: string = \"\";\n              if(this.quizService.correct === this.state.quizLength) {\n                resultDescription = \"Perfect score, awesome!\";\n              }\n              else if(this.quizService.correct > (this.state.quizLength * 0.8)) {\n                resultDescription = \"Great score, well done!\";\n              }\n              else if(this.quizService.correct  > (this.state.quizLength * 0.6)) {\n                resultDescription = \"Good score!\";\n              }\n              else if(this.quizService.correct  > (this.state.quizLength * 0.4)) {\n                resultDescription = \"Not bad, keep trying.\";\n              }\n              else {\n                resultDescription = \"Looks like you need more practice.\";\n              }\n\n              this.setState({ quizStatus: QuizStatus.Finished, resultDescription});\n            }\n          }\n        );\n      }\n    }\n  }\n\n  handleNotePress(note: PianoNote) {\n    const alternateNote = this.pianoService.getAlternateNote(note.noteId);\n\n    this.addNote(note);\n    this.setState({alternateNote: alternateNote });\n\n    this.soundService.playNote(note.keyId);\n  }\n\n  onStartClick(level: string) {\n    let notes: string[] = [];\n    if (level === 'easy') {\n      notes = this.pianoService.getAllNaturalNoteIds(3,4); // middle 2 octaves only!\n    }\n    else if (level === 'medium') {\n      notes = this.pianoService.getAllNaturalNoteIds();\n    }\n    else {\n      // hard level\n      notes = this.pianoService.getAllNoteIds();\n    }\n\n    this.quizService.startQuiz(this.state.quizLength, notes);\n    const currentQuizNote = this.pianoService.getNote( this.quizService.getCurrentNoteId() );\n\n    this.setState({ notes: [currentQuizNote], quizStatus: QuizStatus.InProgress, quizCorrect: this.quizService.correct, quizIncorrect: this.quizService.incorrect });\n  }\n\n  onTryAgainClick() {\n    this.setState({ notes: [], quizCorrect: 0, quizIncorrect: 0, quizLength: 16, quizStatus: QuizStatus.Starting });\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n        <div id=\"side-content\">\n          <PlayControl\n            message=\"Piano Play\"\n            mode={this.state.mode}\n            onModeSelected={this.handleModeChange}\n          />\n          <div className=\"panel\">\n            {this.state.mode === PianoMode.Play &&\n              <NoteInfo note={this.state.notes[this.state.notes.length - 1]} alternateNote={this.state.alternateNote} onNotePress={this.handleNotePress} />\n            }\n            {this.state.mode === PianoMode.Quiz &&\n              <QuizInfo\n                status={this.state.quizStatus}\n                correct={this.state.quizCorrect}\n                incorrect={this.state.quizIncorrect}\n                total={this.state.quizLength}\n                description={this.state.resultDescription}\n                result={this.state.quizResult}\n                onStartClick={this.onStartClick}\n                onTryAgainClick={this.onTryAgainClick}\n                />\n            }\n          </div>\n        </div>\n        <div id=\"notation-component\">\n          <Notation notes={this.state.notes} />\n        </div>\n        <div id=\"keyboard-component\">\n          <Keyboard highlightedKeyId={0} onKeyPress={this.handleKeyPress} />\n        </div>\n        <p id=\"appDetails\">Built with <a href=\"https://reactjs.org/\">React</a> (v16.12.0) - Source available on <a href=\"https://github.com/deanmalone/piano-play-react/\">GitHub</a></p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}